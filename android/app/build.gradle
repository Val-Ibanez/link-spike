apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// Aplicar configuraciÃ³n de flavors
apply from: "flavor-config.gradle"

// React Native Config - Especificar TODAS las variantes para cada flavor
project.ext.envConfigFiles = [
        bancoSantaCruzDebug: ".env.bancoSantaCruz",
        bancoSantaCruzRelease: ".env.bancoSantaCruz",
        bancoEntreRiosDebug: ".env.bancoEntreRios",
        bancoEntreRiosRelease: ".env.bancoEntreRios",
        bancoSantaFeDebug: ".env.bancoSantaFe",
        bancoSantaFeRelease: ".env.bancoSantaFe",
    ]

// Aplicar dotenv.gradle ANTES de usar project.env
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.myreactnativeapp"
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.env.get("VERSION_CODE")?.toInteger() ?: 1
        versionName project.env.get("VERSION_NAME") ?: "1.0.0"
        buildConfigField "String", "BUILD_NUMBER", "\"${project.env.get("BUILD_NUMBER") ?: "1"}\""
        buildConfigField "String", "RELEASE_STAGE", "\"${project.env.get("RELEASE_STAGE") ?: "dev"}\""
        resValue "string", "version_name", project.env.get("VERSION_NAME") ?: "1.0.0"
        resValue "string", "build_number", project.env.get("BUILD_NUMBER") ?: "1"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        bancoEntreRios {
            storeFile file('../keystores/bancoEntreRios.keystore')
            keyAlias 'bancoEntreRios'
            storePassword System.getenv('BANCO_ENTRE_RIOS_STORE_PASSWORD') ?: 'defaultpass'
            keyPassword System.getenv('BANCO_ENTRE_RIOS_KEY_PASSWORD') ?: 'defaultpass'
        }
        bancoSantaCruz {
            storeFile file('../keystores/bancoSantaCruz.keystore')
            keyAlias 'bancoSantaCruz'
            storePassword System.getenv('BANCO_SANTA_CRUZ_STORE_PASSWORD') ?: 'defaultpass'
            keyPassword System.getenv('BANCO_SANTA_CRUZ_KEY_PASSWORD') ?: 'defaultpass'
        }
        bancoSantaFe {
            storeFile file('../keystores/bancoSantaFe.keystore')
            keyAlias 'bancoSantaFe'
            storePassword System.getenv('BANCO_SANTA_FE_STORE_PASSWORD') ?: 'defaultpass'
            keyPassword System.getenv('BANCO_SANTA_FE_KEY_PASSWORD') ?: 'defaultpass'
        }
    }
    flavorDimensions "default"
    productFlavors {
        
        bancoSantaCruz {
            dimension "default"
            applyFlavorConfig(it, "bancoSantaCruz")
        }
        bancoEntreRios {
            dimension "default"
            applyFlavorConfig(it, "bancoEntreRios")
        }
        bancoSantaFe {
            dimension "default"
            applyFlavorConfig(it, "bancoSantaFe")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    
    // Solo generar variantes Debug para desarrollo
    variantFilter { variant ->
        def buildType = variant.buildType.name
        if (buildType == "release") {
            variant.setIgnore(true)
        }
    }
    
    // Configurar signing para cada flavor
    productFlavors.all { flavor ->
        if (flavor.name == "bancoEntreRios") {
            flavor.signingConfig = signingConfigs.bancoEntreRios
        } else if (flavor.name == "bancoSantaCruz") {
            flavor.signingConfig = signingConfigs.bancoSantaCruz
        } else if (flavor.name == "bancoSantaFe") {
            flavor.signingConfig = signingConfigs.bancoSantaFe
        } else {
            flavor.signingConfig = signingConfigs.debug
        }
    }
    
    // Configurar sourceSets para cada flavor
    sourceSets {
        bancoEntreRios {
            java.srcDirs = ['src/bancoEntreRios/java']
            manifest.srcFile 'src/bancoEntreRios/AndroidManifest.xml'
        }
        bancoSantaCruz {
            java.srcDirs = ['src/bancoSantaCruz/java']
            manifest.srcFile 'src/bancoSantaCruz/AndroidManifest.xml'
        }
        bancoSantaFe {
            java.srcDirs = ['src/bancoSantaFe/java']
            manifest.srcFile 'src/bancoSantaFe/AndroidManifest.xml'
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
